{"componentChunkName":"component---src-style-templates-blog-template-js","path":"/posts/mdx-in-gatsby","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-07-27\",\n  \"title\": \"MDX in Gatsby\",\n  \"slug\": \"posts/mdx-in-gatsby\",\n  \"description\": \"Upgrade Markdown with JS and components!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In order to utilize functionality of Javascript code and React Components in your Markdown content (for example to present a button!), first you need to install appropriate plugin, so let's start in command line:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"npm install @mdx-js/mdx @mdx-js/react gatsby-plugin-mdx\\nnpm remove gatsby-transformer-remark\"))), mdx(\"p\", null, \"Code above will install mdx plugins and remove \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-transform-remark\"), \" plugin (the one that used to transform markdown into html), that is no longer needed. Then...\"), mdx(\"h2\", null, \"Edit \", mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-config.js\")), mdx(\"p\", null, \"In \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-config.js\"), \" you need to replace \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-transformer-remark\"), \" with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-plugin-mdx\"), \". With one little details, this is almost it. To make it work, update \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"plugins\"), \" options to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsbyRemarkPlugins\"), \". Here is my example:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"{\\n      resolve: `gatsby-plugin-mdx`,\\n      options: {\\n        extensions: [`.md`, `.mdx`],\\n        gatsbyRemarkPlugins: [\\n          `gatsby-remark-prismjs`,\\n          `gatsby-remark-copy-linked-files`,\\n          {\\n            resolve: `gatsby-remark-images`,\\n            options: {\\n              maxWidth: 756,\\n            },\\n          },\\n        ],\\n      },\\n    },\"))), mdx(\"p\", null, \"As you can see, I added one more option: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"extensions\"), \" this tells the MDX plugin to process files with both \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \".md\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \".mdx\"), \" extensions as by default it only works on the latter. So if you don't want to go after every blog post you've already created and change their extension, add same option, unless you want to start using MDX features in older posts. If you're ready here, then...\"), mdx(\"h2\", null, \"Edit \", mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-node.js\")), mdx(\"p\", null, \"First you need to change how \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"onCreateNode\"), \" filters markdown files. If you are left with old posts saved with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \".md\"), \" extension, then you have to include both in the conditional. Otherwise go just with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"Mdx\\\"\"), \" side of the alternative:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"diff\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"exports.onCreateNode = ({ node, actions, getNode }) => {\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \" const nodeInternalType = node.internal.type\\n\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token deleted-sign deleted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"  if (node.internal.type === `MarkdownRemark`) {\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"  if (nodeInternalType === `MarkdownRemark`\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"      || nodeInternalType === \\\"Mdx\\\") {\")))), mdx(\"p\", null, \"Remember also to update graphql:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"diff\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"exports.createPages = async ({ actions, graphql, reporter }) => {\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \" const results = await graphql(`\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"   {\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token deleted-sign deleted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"     allMarkdownRemark\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"     allMdx\")))), mdx(\"h2\", null, \"Check other files, which use graphql\"), mdx(\"p\", null, \"Since you're not using \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-transform-remark\"), \" plugin any more, you need to check all other files (like \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"blog.js\"), \") and update their graphql queries so wherever they use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"allMarkdownRemark\"), \" use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"allMdx\"), \".\"), mdx(\"p\", null, \"In files that only render one post (like \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"blogpostTemplate.js\"), \") in graphql query change \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"markdownRemark\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mdx\"), \" and property name \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"html\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"body\"), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"diff\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"export const pageQuery = graphql`\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \" query BlogPostBySlug($slug: String!) {\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token deleted-sign deleted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"    markdownRemark(frontmatter: { path: { eq: $path } }) {\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"      html\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"    mdx(frontmatter: { slug: { eq: $slug } }) {\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"      body\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"     frontmatter {\")))), mdx(\"p\", null, \"And finally, inside template render function add \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"MDXRenderer\"), \" component from \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-plugin-mdx\"), \" plugin and change destructuring assignments inside the function.\"), mdx(\"p\", null, \"Rendering mdx requires different syntax than the one for classic markdown, so thankfully you can replace \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"dangerouslySetInnerHTML\"), \" with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mdx.body\"), \" wrapped with the new \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"MDXRenderer\"), \" component.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"diff\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"import { MDXRenderer } from \\\"gatsby-plugin-mdx\\\"\\n\"), \"\\nexport default function Template({ data }) {\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token deleted-sign deleted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"  const { markdownRemark } = data\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"  const { frontmatter, html } = markdownRemark\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"  const { mdx } = data\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"  const { frontmatter } = mdx\\n\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token deleted-sign deleted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"          <div\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"            className=\\\"blog-post-content\\\"\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"            dangerouslySetInnerHTML={{ __html: html }}\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix deleted\"\n  }), \"-\"), \"          />\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"          <MDXRenderer>{mdx.body}</MDXRenderer>\")))), mdx(\"h2\", null, \"Final notes\"), mdx(\"p\", null, \"Remember that \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \".mdx\"), \" format follows JSX syntax, so some HTML attributes names will be required to spell differently (like \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"class\"), \" -> \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"className\"), \").\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"July 27, 2020","slug":"posts/mdx-in-gatsby","title":"MDX in Gatsby","description":"Upgrade Markdown with JS and components!","externalScriptsUrls":null,"facebookThumbnail":null}}},"pageContext":{"slug":"posts/mdx-in-gatsby"}},"staticQueryHashes":[]}