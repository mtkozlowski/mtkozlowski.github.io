{"componentChunkName":"component---src-style-templates-blog-template-js","path":"/posts/gifs-and-mp4s-in-gatsbyjs-markdown-mdx","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-07-28\",\n  \"title\": \"GIFs and MP4s in GatsbyJS Markdown (MDX)\",\n  \"slug\": \"posts/gifs-and-mp4s-in-gatsbyjs-markdown-mdx\",\n  \"description\": \"Every blog post deserves a GIF!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Every good blog post presentation or conversation deserves an appropriate GIF. Let's face that. So in this short tutorial, I'm going to show you how you can include GIFs and MP4s into your markdown or rather MDX (given that you already have MDX inside your Gatsby website - if not, check \", mdx(StyledLink, {\n    to: \"/posts/mdx-in-gatsby\",\n    mdxType: \"StyledLink\"\n  }, \"this blog post\"), \").\"), mdx(\"h2\", null, \"Install required plugins\"), mdx(\"p\", null, \"Let's start again with a console:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"npm install --save gatsby-remark-copy-linked-files\"))), mdx(\"p\", null, \"While it's being downloaded and installed you can make an update to your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-config.js\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"diff\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-diff\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"module.exports = {\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \" plugins: [\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"   {\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"     resolve: `gatsby-plugin-mdx`,\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"     options: {\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"       gatsbyRemarkPlugins: [\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token inserted-sign inserted\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix inserted\"\n  }), \"+\"), \"          `gatsby-remark-copy-linked-files`,\\n\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token unchanged\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"       ],\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"     },\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \"   },\\n\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token prefix unchanged\"\n  }), \" \"), \" ],\\n\"), \"}\"))), mdx(\"p\", null, \"This plugin takes care of URLs to your media or other files (like PDFs), when your website is being built and deployed to production. Super important.\"), mdx(\"h2\", null, \"Add your media to your blog post!\"), mdx(\"p\", null, \"After this little, simple step anything left to do is to include your media inside your blogpost. To do so, you will use HTML (or JSX) syntax and elements. Like in following example:\"), mdx(\"h3\", null, \"MP4\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<p style=\\\"text-align: center\\\">\\n    <video autoplay loop muted playsinline poster=\\\"example-jpg.jpg\\\">\\n        <source src=\\\"example-webm.webm\\\" type=\\\"video/webm\\\" />\\n        <source src=\\\"example-mp4.mp4\\\" type=\\\"video/mp4\\\" />\\n    </video>\\n</p>\"))), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, mdx(\"video\", {\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    playsInline: true,\n    poster: \"/748e91bc9fc42568dac5e60ff73f43b1/example-jpg.jpg\"\n  }, mdx(\"source\", {\n    src: \"/352a2005a396c586a2e5122165ef15ab/example-webm.webm\",\n    type: \"video/webm\"\n  }), mdx(\"source\", {\n    src: \"/44695e136eaf2c75cec184544a8a9864/example-mp4.mp4\",\n    type: \"video/mp4\"\n  }))), mdx(\"p\", null, \"Some explanation. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"loop\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"autoplay\"), \" video tag's attribute are most likely self-explanatory. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"playsinline\"), \" play important role on mobile devices and you rather have this turned on (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://css-tricks.com/what-does-playsinline-mean-in-web-video/\"\n  }), \"more read\"), \").\"), mdx(\"p\", null, \"Pay attention to source tags. Since you're typing in MDX file extension, you need to follow JSX syntax, thus they need to be self-enclosed tags. Otherwise Gatsby compiler will refuse to cooperate.\"), mdx(\"p\", null, \"I'm using here quite a new format: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"webm\"), \" it provides much smaller files, but with quality compared to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mp4\"), \" format. If you follow this list syntax above, any browser that doesn't support \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"webm\"), \" format will use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mp4\"), \" file.\"), mdx(\"p\", null, \"For more details visit the links listed at the bottom of this blog post.\"), mdx(\"h3\", null, \"GIF\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<p style=\\\"text-align: center\\\">\\n    <img src=\\\"example-gif.gif\\\" alt=\\\"example gif\\\" />\\n</p>\"))), mdx(\"p\", {\n    \"style\": {\n      \"textAlign\": \"center\"\n    }\n  }, \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/bcaf83f5d25046834189fb262183b927/example-gif.gif\",\n    \"alt\": \"example gif\"\n  })), \"\\n\"), mdx(\"p\", null, \"You CAN use markdown syntax to display GIFs. It will look as follows:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"![Alt text](example-gif.gif)\"))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/bcaf83f5d25046834189fb262183b927/example-gif.gif\",\n    \"alt\": \"Alt text\"\n  }))), mdx(\"p\", null, \"But, as you can see above, it will be rendered with default markdown paragraph alignment: to left side. Since I prefer my playable media (which are usually smaller than the grid) to be displayed in the middle, I use HTML syntax to put them in centered paragraph. Either way \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gatsby-remark-copy-linked-files\"), \" does its job and makes URLs work.\"), mdx(\"h2\", null, \"Last but not least: be bandwidth-friendly!\"), mdx(\"p\", null, \"GIFs are super fun way to boost your message, draw attention or simply cheer your readers up. But!!! They are as well super heavy. For example: in the blogpost above the GIF I used weighs \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"1,875 KB\"), \"! That's a lot, it's the largest file in a Network tab if you sneak to your developer's tools. It looks terribly large compared to MP4 file I also used, which is only \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"478 KB\"), \" plus \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"20 KB\"), \" for a poster JPG file. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"It's 3 times larger!\"), \" Please, don't do it to your visitors.\"), mdx(\"p\", null, \"Further read:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.smashingmagazine.com/2018/11/gif-to-video/\"\n  }), \"Improve Animated GIF Performance With HTML5 Video @ Smashing Magazine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://web.dev/replace-gifs-with-videos/\"\n  }), \"Replace animated GIFs with video for faster page loads @ web.dev\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"July 28, 2020","slug":"posts/gifs-and-mp4s-in-gatsbyjs-markdown-mdx","title":"GIFs and MP4s in GatsbyJS Markdown (MDX)","description":"Every blog post deserves a GIF!","externalScriptsUrls":null,"facebookThumbnail":null}}},"pageContext":{"slug":"posts/gifs-and-mp4s-in-gatsbyjs-markdown-mdx"}},"staticQueryHashes":[]}